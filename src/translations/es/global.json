{
  "nav": {
    "home": "Inicio",
    "projects": "Proyectos",
    "contact": "Contacto"
  },
  "home": {
    "presentation": "HOLA, SOY",
    "description": "SANDRO CARIOLI",
    "foot": "DESARROLLADOR FRONT-END"
  },
  "me": {
    "hobbies": [
      "COMENCÉ CON CURSOS DE HTML, CSS, JAVASCRIPT (INCLUYENDO TAILWINDCSS) Y REACT PARA EL FRONT END. LUEGO AVANCÉ AL BACKEND CON LA PILA MERN, APRENDIENDO NODEJS EXPRESS Y MONGODB. TRAS ESTOS CURSOS, CONTINUÉ DE FORMA AUTODIDACTA CON NEXTJS Y TYPESCRIPT, DONDE ME SIENTO CÓMODO TRABAJANDO.",
      "ACTUALMENTE, ESTOY BUSCANDO UNA OPORTUNIDAD LABORAL EN ESTE CAMPO PARA SEGUIR CRECIENDO PROFESIONALMENTE."
    ]
  },
  "footer": {
    "foot": "(ENCONTRÁ)",
    "links": ["/projects", "/contact"],
    "names": ["PROYECTOS", "CONTACTO"],
    "email": "e-mail",
    "resume": "CURRICULUM",
    "linkedin": "LINKEDIN",
    "whatsapp": "WHATSAPP",
    "github": "GITHUB",
    "also": "podes encontrarme también en:",
    "cv": "/cv.pdf"
  },
  "projects": {
    "title": "PROYECTOS & TRABAJO",
    "description": "Debajo hay una lista de proyectos que elegí con sus respectivas tecnologías. He realizado proyectos Front End y Back End los cuales podes encontrar en mi Github. Actualmente me encuentro interesado en seguir desarrollando mis skills en Front End."
  },
  "P1": {
    "title": "White Palace",
    "stack": "Diseño - Front-End",
    "technologies": "HTML, CSS, JAVASCRIPT, ASTRO"
  },
  "common": {
    "viewDeployed": "Ver Deploy",
    "viewGithub": "Ver Github"
  },
  "works": [
    {
      "id": 1,
      "tech": "React / TypeScript / Tailwind",
      "name": "GA Risk Capital",
      "description": "Desarrollo de una aplicación web a partir del diseño en archivo Figma. Utilización de metodología mobile-first e implementación de soporte multiidioma con i18next. Mis responsabilidades incluyeron la gestión del hosting, la implementación de SEO y garantizar el correcto funcionamiento y mantenimiento del sitio web. Grupo de trabajo: Diseñador UI/UX, UX Writer, Desarrollador. GitHub está desactualizado, pero proporciona una visión general del código base.",
      "image": "/desktop-gp.png",
      "image2": "/mobile-gp.png",
      "githubLink": "https://github.com/TimmyJonesP/GC",
      "deployLink": "https://main--garisk.netlify.app/"
    },
    {
      "id": 2,
      "tech": "Astro / TypeScript / Tailwind",
      "name": "White Palace",
      "image": "/desktop-wp.png",
      "image2": "/mobile-wp.png",
      "description": "Diseño y desarrollo de una landing page para una banda de música. Creé versiones para móvil, tableta y escritorio, y luego inicialicé el sitio web utilizando el framework Astro. Aprendí los conceptos básicos de Astro y utilicé Tailwind CSS para el diseño. Además, comencé a aprender TypeScript mientras desarrollaba la aplicación de back-end con NestJS.",
      "githubLink": "https://github.com/TimmyJonesP/WhitePalace-Astro",
      "deployLink": "https://whitepalace.netlify.app/"
    },
    {
      "id": 3,
      "tech": "React / JavaScript / Tailwind / Firebase",
      "name": "Vinoteca",
      "image": "/desktop-vt.png",
      "image2": "/mobile-vt.png",
      "description": "Proyecto personal para aprender los conceptos básicos y las herramientas del ecosistema de ReactJS. Desarrollé una aplicación de comercio electrónico utilizando hooks, react-router-dom y Firebase, donde se almacenan los datos de productos y tickets. Implementé filtros por categoría en la barra de navegación, una tabla de productos, un formulario para la generación de tickets y mobile-first.",
      "githubLink": "https://github.com/TimmyJonesP/CH-React.JS",
      "deployLink": "https://final-react-chi.vercel.app/"
    },
    {
      "id": 4,
      "tech": "NestJS / TypeScript / PostgreSQL",
      "name": "APIrest",
      "description": "Después de trabajar con NodeJS, exploré NestJS porque me impresionaron los decoradores y la organización que este framework exige. Me permitió ser más organizado al escribir código y seguir los principios SOLID. Creé una base de datos para usuarios, razas y gatos, implementé autenticación para roles de usuario y gestioné el almacenamiento de datos a través de solicitudes API. Utilicé TypeORM con una base de datos relacional (MySQL) y decidí migrar a PostgreSQL durante el despliegue sin necesidad de cambiar la base de código gracias a TypeORM. Usé POSTMAN para verificar los endpoints y manejar las solicitudes. Esta fue también mi primera experiencia con TypeScript, donde utilicé enums, interfaces y validators de manera más robusta, asegurando que un cambio afectara a todo el proyecto. Manejo de DTO's para la estructura de datos del front-end al back-end.",
      "githubLink": "https://github.com/TimmyJonesP/Vet-API-Nestjs",
      "deployLink": ""
    },
    {
      "id": 5,
      "tech": " NodeJS / Express / MongoDB",
      "name": "APIrest",
      "description": "Mi primer encuentro con el desarrollo back-end, bases de datos NoSQL, Express y muchas otras tecnologías. El proyecto es una aplicación de e-commerce que maneja la creación y autenticación de usuarios (con la biblioteca Passport), la gestión de roles de usuario, operaciones CRUD para productos, middlewares para acceso público/usuario/admin, administración del carrito de compras, DTOs, patrón de repository, proceso de pago y notificaciones por correo electrónico. También hay una opción de inicio de sesión con GitHub usando Passport. Tecnologías utilizadas: Express, Mongoose, Passport, NodeMailer, Swagger (para documentación) y tokens JWT.",
      "githubLink": "https://github.com/TimmyJonesP/Ecommerce-NodeJS-Express",
      "deployLink": ""
    }
  ]
}
